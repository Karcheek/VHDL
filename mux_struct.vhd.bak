entity mux_str is 
port(i : in bit_vector (3 downto 0);
     s : in bit_vector (1 downto 0);
     y : out bit);
end mux_str;

architecture struc of mux_str is
signal in1,in2,in3,in4,nots0,nots1 : bit;

component not_gate
port(a : in bit ; y : out bit); 
end component;

component and_gate
port(a,b,c : in bit ; y : out bit);
end component;

component or_gate
port(a,b,c,d : in bit ; y : out bit);
end component;

begin

s0: not_gate port map
(
a => s(0),
y => nots0
);

s1: not_gate port map
(
a => s(1),
y => nots1
);

i1: and_gate port map
(
a => i(0),
b => nots1,
c => nots0,
y => in1
);

i2: and_gate port map
(
a => i(1),
b => nots1,
c => s(0),
y => in2
);

i3: and_gate port map
(
a => i(2),
b => s(1),
c => nots0,
y => in3
);

i4: and_gate port map
(
a => i(3),
b => s(1),
c => s(0),
y => in4
);

o1: or_gate port map
(
a => in1,
b => in2,
c => in3,
d => in4,
y => y
);

end struc;

entity muxstruc_tb is
end muxstruc_tb;

architecture abc of muxstruc_tb is
component muxstruc
port 
(
i: in bit_vector(3 downto 0);
s: in bit_vector(1 downto 0);
y: out bit
);
end component;

signal a : bit_vector(3 downto 0);
signal sel: bit_vector(1 downto 0);
signal f: bit;

begin

t2: muxstruc 
port map
(
i=>a,
s=>sel,
y=>f
);

process 
begin

a<="1010";

sel<="00";
wait for 10ns;

sel<="01";
wait for 10ns;

sel<="10";
wait for 10ns;

sel<="11";

wait;
end process;
end abc;

